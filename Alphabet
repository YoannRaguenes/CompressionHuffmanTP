import java.io.*;
import java.util.*;

public class Huffman {
	
	
	
	//  [ETAPE 1]
	//We start by reading the given text file. 
	 
	
	public static char [] getCharac(String filepath) throws IOException{
		File file = new File(filepath);
		char [] text = new char[(int) file.length()];
		FileReader fr = new FileReader(file); 
		fr.read(text);   
		fr.close();
		return text;
	}
	
	/* [ETAPE 1]
	 * We get the frequency of each character of the text.
	 *  We use HashMap from java.util to combine a character with an integer.
	 * If the character isn't in 'res', we put the entire object else we just change the integer(+1)
	 */
	
	public static HashMap<Character, Integer> countCharac(char [] chars){
		HashMap<Character, Integer> res = new HashMap<Character, Integer>();

		for(char aChar : chars){
			if(!res.containsKey(aChar)) res.put(aChar, 1);
			else res.put(aChar, res.get(aChar) + 1);
		}
		
		
		
		return res;

	}
	
	
	/* [ETAPE 2]
	 * Creation of the "Node" class
	 * A node has a value, a right and left son and a frequency
	 */
	
	private class Node<Value>{
		public Value value;
		public Node<Value> leftSon;
		public Node<Value> rightSon;
		public int frequency;
		
		public Node(Value value,Node<Value>leftSon, Node<Value>rightSon,int frequency) {
			this.value=value;
			this.leftSon=leftSon;
			this.rightSon=rightSon;
			this.frequency=frequency;
		}
		
	}
	
	public static Node<Character> tree (HashMap<Character,Integer>frequency){
		boolean end = false;
		Node<Character> top;
		
		
		
	}
	
	
	
public static void main(String[] args) throws IOException {
		
		//System.out.println(getCharac("C:/alice.txt"));
		System.out.println(countCharac(getCharac("C:/alice.txt")));
		
	}


	
	

}
